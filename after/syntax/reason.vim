syntax match Normal '\v\+\.' conceal cchar=+
syntax match Normal '\v-\.' conceal cchar=-
syntax match Normal '\v\*\.' conceal cchar=‚àô
syntax match Normal '\v/\.' conceal cchar=/

syntax keyword Normal string_of_int conceal cchar=ùêí
syntax keyword Normal string_of_float conceal cchar=ùêí
syntax keyword Normal int_of_string conceal cchar=‚Ñ§
syntax keyword Normal float_of_string conceal cchar=‚Ñù


syntax match Normal '\v\zs;\ze(\s*//.*)?$' conceal

" TODO try dimming curly braces (or you could conceal them completely because
" they only denote *scope*, unlike parens
"XXX cchar= (regular space)
" TODO don't hide but just make very dim
syntax match Comment '\v(\{ ?)|(\} ?)'

" Matches x0 -> x‚ÇÄ A2 -> A‚ÇÇ word2 -> word‚ÇÇ
" Use ms=s+1 to avoid concealing the letter before the number

" opening is like opening a crate
syntax keyword Normal open conceal cchar=‚òí
syntax match Normal '\v<[[:alpha:]_]+0>'ms=e conceal cchar=‚ÇÄ
syntax match Normal '\v<[[:alpha:]_]+1>'ms=e conceal cchar=‚ÇÅ
syntax match Normal '\v<[[:alpha:]_]+2>'ms=e conceal cchar=‚ÇÇ
syntax match Normal '\v<[[:alpha:]_]+3>'ms=e conceal cchar=‚ÇÉ
syntax match Normal '\v<[[:alpha:]_]+4>'ms=e conceal cchar=‚ÇÑ
syntax match Normal '\v<[[:alpha:]_]+5>'ms=e conceal cchar=‚ÇÖ
syntax match Normal '\v<[[:alpha:]_]+6>'ms=e conceal cchar=‚ÇÜ
syntax match Normal '\v<[[:alpha:]_]+7>'ms=e conceal cchar=‚Çá
" the ranges avoid f8, u8,i8
syntax match Normal '\v<[a-eg-hj-tv-z_]+8>'ms=e conceal cchar=‚Çà
syntax match Normal '\v<[[:alpha:]_]+9>'ms=e conceal cchar=‚Çâ

" Numbers
syntax match Normal '\v[^_]\zs_0\ze>' conceal cchar=‚ÇÄ
syntax match Normal '\v[^_]\zs_1\ze>' conceal cchar=‚ÇÅ
syntax match Normal '\v[^_]\zs_2\ze>' conceal cchar=‚ÇÇ
syntax match Normal '\v[^_]\zs_3\ze>' conceal cchar=‚ÇÉ
syntax match Normal '\v[^_]\zs_4\ze>' conceal cchar=‚ÇÑ
syntax match Normal '\v[^_]\zs_5\ze>' conceal cchar=‚ÇÖ
syntax match Normal '\v[^_]\zs_6\ze>' conceal cchar=‚ÇÜ
syntax match Normal '\v[^_]\zs_7\ze>' conceal cchar=‚Çá
syntax match Normal '\v[^_]\zs_8\ze>' conceal cchar=‚Çà
syntax match Normal '\v[^_]\zs_9\ze>' conceal cchar=‚Çâ
" Letters
syntax match Normal '\v[^_]\zs_[aA]\ze>' conceal cchar=‚Çê
syntax match Normal '\v[^_]\zs_[lL]\ze>' conceal cchar=‚Çó
syntax match Normal '\v[^_]\zs_[pP]\ze>' conceal cchar=‚Çö
syntax match Normal '\v[^_]\zs_[rR]\ze>' conceal cchar=·µ£
syntax match Normal '\v[^_]\zs_[sS]\ze>' conceal cchar=‚Çõ
syntax match Normal '\v[^_]\zs_[uU]\ze>' conceal cchar=·µ§
syntax match Normal '\v[^_]\zs_[vV]\ze>' conceal cchar=·µ•
syntax match Normal '\v[^_]\zs_[xX]\ze>' conceal cchar=‚Çì	
syntax match Normal '\v[^_]\zs_[hH]\ze>' conceal cchar=‚Çï
syntax match Normal '\v[^_]\zs_[iI]\ze>' conceal cchar=·µ¢
syntax match Normal '\v[^_]\zs_[jJ]\ze>' conceal cchar=‚±º
syntax match Normal '\v[^_]\zs_[kK]\ze>' conceal cchar=‚Çñ
syntax match Normal '\v[^_]\zs_[nN]\ze>' conceal cchar=‚Çô
syntax match Normal '\v[^_]\zs_[mM]\ze>' conceal cchar=‚Çò
syntax match Normal '\v[^_]\zs_[tT]\ze>' conceal cchar=‚Çú

syntax match Normal '<<' conceal cchar=‚â∫
syntax match Normal '>>' conceal cchar=‚âª
syntax match Normal '\^' conceal cchar=‚äï
syntax match Normal '\v\.\.\=' conceal cchar=‚Ä¶
syntax match Normal '\v(^|\s|\W)\zs\&\&\ze(\W|$)' conceal cchar=‚àß
" Space is required to distinguish this from empty closure
syntax match Normal '[^=,] \zs||\ze ' conceal cchar=‚à®

syntax match Normal "<=" conceal cchar=‚â§
syntax match Normal ">=" conceal cchar=‚â•

syntax match RightArrowHead contained ">" conceal
syntax match RightArrowTail contained "-" conceal cchar=‚Üí
syntax match Normal "->" contains=RightArrowHead,RightArrowTail

syntax match FatRightArrowHead contained ">" conceal
syntax match FatRightArrowTail contained "=" conceal cchar=‚áí
syntax match Normal "=>" contains=FatRightArrowHead,FatRightArrowTail

syntax match Normal "\v\|\>" conceal cchar=‚Ü¶

syntax match Normal '\s=\s'ms=s+1,me=e-1 conceal cchar=‚Üê
syntax match Normal '\S=\S'ms=s+1,me=e-1 conceal cchar=‚Üê

" only conceal "==" if alone, to avoid concealing merge conflict markers
syntax match Normal "=\@<!===\@!" conceal cchar=‚âù

" Has to be ! before != for it to work since rules are matched one after the
" other, so the last one "wins".
syntax match Normal '!=' conceal cchar=‚â†

syntax match Normal '\( \|\)\*\*\( \|\)2\>' conceal cchar=¬≤
syntax match Normal '\( \|\)\*\*\( \|\)n\>' conceal cchar=‚Åø
" only conceals when there's one space on each side of the star, making it
" unambiguous with pointer dereferencing
syntax match Normal '\s\*\s'ms=s+1,me=e-1 conceal cchar=‚àô

syntax keyword Normal alpha ALPHA conceal cchar=Œ±
syntax keyword Normal beta BETA conceal cchar=Œ≤
syntax keyword Normal Gamma conceal cchar=Œì
syntax keyword Normal gamma GAMMA conceal cchar=Œ≥
syntax keyword Normal Delta conceal cchar=Œî
syntax keyword Normal delta DELTA conceal cchar=Œ¥
syntax keyword Normal epsilon EPSILON conceal cchar=Œµ
syntax keyword Normal zeta ZETA conceal cchar=Œ∂
syntax keyword Normal eta ETA conceal cchar=Œ∑
syntax keyword Normal Theta conceal cchar=œ¥
syntax keyword Normal theta THETA conceal cchar=Œ∏
syntax keyword Normal kappa KAPPA conceal cchar=Œ∫
syntax keyword Normal lambda LAMBDA lambda_ _lambda conceal cchar=Œª
syntax keyword Normal mu MU conceal cchar=Œº
syntax keyword Normal nu NU conceal cchar=ŒΩ
syntax keyword Normal Xi conceal cchar=Œû
syntax keyword Normal xi XI conceal cchar=Œæ
syntax keyword Normal Pi conceal cchar=Œ†
syntax keyword Normal rho RHO conceal cchar=œÅ
syntax keyword Normal sigma SIGMA conceal cchar=œÉ
syntax keyword Normal tau TAU conceal cchar=œÑ
syntax keyword Normal upsilon UPSILON conceal cchar=œÖ
syntax keyword Normal Phi conceal cchar=Œ¶
syntax keyword Normal phi PHI conceal cchar=œÜ
syntax keyword Normal chi CHI conceal cchar=œá
syntax keyword Normal Psi conceal cchar=Œ®
syntax keyword Normal psi PSI conceal cchar=œà
syntax keyword Normal Omega conceal cchar=Œ©
syntax keyword Normal omega OMEGA conceal cchar=œâ
syntax keyword Normal nabla NABLA conceal cchar=‚àá

syntax keyword Normal sqrt conceal cchar=‚àö

" like APL
syntax keyword Normal in conceal cchar=‚àà
" we don't use syn keyword in order to swallow the space after.
syntax keyword Normal Some conceal cchar=‚úî
syntax keyword Constant None conceal cchar=‚àÖ
syntax keyword Type option conceal cchar=?
" http://www.fileformat.info/info/unicode/block/geometric_shapes/images.htm
syntax keyword Keyword break conceal cchar=‚óÅ
syntax keyword Keyword continue conceal cchar=‚Üª
syntax keyword Keyword return conceal cchar=‚óÄ
syntax keyword Keyword switch conceal cchar=‚ñ∏
syntax keyword Keyword if conceal cchar=‚ñ∏
syntax match Keyword 'else if' conceal cchar=‚ñπ
syntax keyword Keyword else conceal cchar=‚ñ™
syntax keyword Constant true conceal cchar=‚ä§
syntax keyword Constant false conceal cchar=‚ä•
syntax keyword Normal for conceal cchar=‚àÄ
syntax keyword Normal while conceal cchar=‚•Å
syntax keyword Normal fun conceal cchar=Œª
syntax match Normal '\v\@\@' conceal cchar=‚àò

syntax match Normal "++\ze[^+]" conceal cchar=‚ß∫
syntax match Normal "\v \@ " conceal cchar=‚ß∫
syntax match Normal "\v(print|read|open|output|seek|abs)\zs_\w+\ze>" conceal

syntax keyword Type bool conceal cchar=ùîπ
syntax keyword Type char conceal cchar=‚àÅ
syntax keyword Type float conceal cchar=‚Ñù
syntax keyword Type int conceal cchar=‚Ñ§
syntax keyword Type string conceal cchar=ùêí
syntax keyword Type UInt conceal cchar=‚Ñï

syntax keyword Keyword where conceal cchar=‚àµ

setlocal conceallevel=2
